// 游댳 Esperar a que el DOM est칠 completamente cargado antes de ejecutar el c칩digo
document.addEventListener("DOMContentLoaded", function () {
    // 游늷 Buscar el formulario de "Registrar Venta"
    const ventaForm = document.getElementById("ventaForm");

    // 游늷 Buscar la tabla donde se mostrar치n las ventas en "Mis Ventas Mensuales"
    const tablaVentas = document.getElementById("tablaVentas");
    
    // 游늷 Buscar el campo de b칰squeda de ventas
    const inputBuscar = document.getElementById("buscarProducto");

    // 游늷 Si la p치gina actual es "Mis Ventas Mensuales", mostrar las ventas guardadas
    if (tablaVentas) {
        mostrarVentas(); // Llama a la funci칩n que carga las ventas desde el almacenamiento
        inputBuscar.addEventListener("input", filtrarVentas); // Activa la b칰squeda en tiempo real
    }

    // 游늷 Si la p치gina actual es "Registrar Venta", capturar la venta cuando se env칤e el formulario
    if (ventaForm) {
        ventaForm.addEventListener("submit", function (event) {
            event.preventDefault(); // Evita que la p치gina se recargue al enviar el formulario

            // 游댳 Capturar los valores que el usuario ingres칩 en el formulario
            const producto = document.getElementById("producto").value.trim();
            const cantidad = document.getElementById("cantidad").value.trim();
            const precio = document.getElementById("precio").value.trim();
            const fechaVenta = document.getElementById("fechaVenta").value;

            // 游댳 Verificar que el usuario haya llenado todos los campos antes de continuar
            if (!producto || !cantidad || !precio || !fechaVenta) {
                alert("Por favor, completa todos los campos antes de registrar la venta.");
                return; // Detener la funci칩n si falta informaci칩n
            }

            // 游댳 Calcular el total de la venta multiplicando cantidad por precio
            const total = (parseFloat(cantidad) * parseFloat(precio)).toFixed(2);

            // 游댳 Crear un objeto con la informaci칩n de la venta
            const nuevaVenta = {
                id: generarIDVenta(), // Genera un n칰mero 칰nico para la venta
                fecha: fechaVenta,
                producto: producto,
                cantidad: cantidad,
                total: `$${total}` // Formato en d칩lares
            };

            // 游댳 Guardar la venta en el almacenamiento local del navegador
            guardarVenta(nuevaVenta);

            // 游댳 Limpiar el formulario para permitir registrar una nueva venta
            ventaForm.reset();

            // 游댳 Mostrar una notificaci칩n al usuario de que la venta fue registrada
            alert("Venta registrada correctamente.");
        });
    }
});

// 游늷 Funci칩n que genera un ID 칰nico para cada venta nueva
function generarIDVenta() {
    const ventas = obtenerVentas(); // Obtener la lista de ventas guardadas
    return ventas.length + 1; // El ID ser치 el n칰mero total de ventas +1
}

// 游늷 Funci칩n para obtener las ventas guardadas en el almacenamiento local
function obtenerVentas() {
    return JSON.parse(localStorage.getItem("ventas")) || []; // Si no hay ventas, devuelve un array vac칤o
}

// 游늷 Funci칩n para guardar una venta en el almacenamiento local
function guardarVenta(venta) {
    const ventas = obtenerVentas(); // Obtener las ventas actuales
    ventas.push(venta); // Agregar la nueva venta a la lista
    localStorage.setItem("ventas", JSON.stringify(ventas)); // Guardar la lista actualizada
}

// 游늷 Funci칩n para mostrar todas las ventas en la tabla de "Mis Ventas Mensuales"
function mostrarVentas(ventasFiltradas = null) {
    const ventas = ventasFiltradas || obtenerVentas(); // Usar ventas filtradas si existen, de lo contrario cargar todas
    const tablaVentas = document.getElementById("tablaVentas");

    // 游댳 Limpiar la tabla antes de agregar nuevas ventas
    tablaVentas.innerHTML = "";

    // 游댳 Recorrer la lista de ventas y agregar cada una a la tabla
    ventas.forEach((venta) => {
        const fila = document.createElement("tr");
        fila.innerHTML = `
            <td>${venta.id}</td>
            <td>${venta.fecha}</td>
            <td>${venta.producto}</td>
            <td>${venta.total}</td>
        `;
        tablaVentas.appendChild(fila); // Insertar la fila en la tabla
    });
}

// 游늷 Funci칩n para buscar ventas por nombre, ID, total o fecha
function filtrarVentas() {
    const textoBusqueda = document.getElementById("buscarProducto").value.toLowerCase(); // Convertir a min칰sculas para evitar errores
    const ventas = obtenerVentas(); // Obtener todas las ventas guardadas

    // 游댳 Buscar coincidencias en nombre, ID, total o fecha de la venta
    const ventasFiltradas = ventas.filter(venta =>
        venta.producto.toLowerCase().includes(textoBusqueda) || // Coincidencia en el nombre del producto
        venta.id.toString().includes(textoBusqueda) || // Coincidencia en el n칰mero de ID
        venta.total.includes(textoBusqueda) || // Coincidencia en el total de la venta
        venta.fecha.includes(textoBusqueda) // Coincidencia en la fecha de la venta
    );

    // 游댳 Mostrar solo las ventas que coinciden con la b칰squeda
    mostrarVentas(ventasFiltradas);
}

// 游늷 Detectar clic en el bot칩n "Registrar Venta" y redirigir a la p치gina de registro
document.getElementById("btnRegistrar").addEventListener("click", function () {
    window.location.href = "/html/registrar-venta.html"; // Cambiar a la p치gina de registro de ventas
});
